{"version":3,"sources":["toastr.js"],"names":["define","$","$container","listener","toastId","toastType","error","info","success","warning","toastr","clear","$toastElement","clearOptions","options","getOptions","getContainer","clearToast","toastsToClear","children","i","length","clearContainer","remove","removeToast","message","title","optionsOverride","notify","type","iconClass","iconClasses","subscribe","callback","version","previousToast","create","containerId","attr","addClass","positionClass","appendTo","target","createContainer","force","hideMethod","duration","hideDuration","easing","hideEasing","[object Object]","publish","args","map","captains","console","extend","preventDuplicates","shouldExit","intervalId","$titleElement","$messageElement","$progressElement","$closeElement","closeHtml","progressBar","hideEta","maxHideTime","response","state","startTime","Date","toastClass","suffix","escapeHtml","append","titleClass","setTitle","messageClass","setMessage","closeButton","closeClass","prepend","progressClass","rtl","newestOnTop","ariaValue","setAria","hide","showMethod","showDuration","showEasing","complete","onShown","timeOut","setTimeout","hideToast","parseFloat","getTime","setInterval","updateProgress","closeOnHover","hover","stickAround","delayedHideToast","onclick","tapToDismiss","click","event","stopPropagation","undefined","cancelBubble","onCloseClick","handleEvents","debug","log","source","replace","override","method","closeMethod","closeDuration","closeEasing","clearTimeout","onHidden","endTime","extendedTimeOut","stop","percentage","width","is","amd","deps","factory","module","exports","require","window","jQuery"],"mappings":"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","file":"toastr.js","sourcesContent":["/* eslint-disable no-undef */\n/*\n * Toastr\n * Copyright 2012-2019\n * Authors: John Papa, Hans Fj√§llemark, and Tim Ferrell.\n * All Rights Reserved.\n * Use, reproduction, distribution, and modification of this code is subject to the terms and\n * conditions of the MIT license, available at http://www.opensource.org/licenses/mit-license.php\n *\n * ARIA Support: Greta Krafsig\n *\n * Project: https://github.com/CodeSeven/toastr\n */\n/* global define */\n\n(function(define) {\n  define(['jquery'], function($) {\n    return (function inner() {\n      let $container;\n      let listener;\n      let toastId = 0;\n      const toastType = {\n        error: 'error',\n        info: 'info',\n        success: 'success',\n        warning: 'warning'\n      };\n\n      const toastr = {\n        clear,\n        remove,\n        error,\n        getContainer,\n        info,\n        options: {},\n        subscribe,\n        success,\n        version: '2.1.4',\n        warning\n      };\n\n      let previousToast;\n\n      return toastr;\n\n      // //////////////\n\n      function error(message, title, optionsOverride) {\n        return notify({\n          type: toastType.error,\n          iconClass: getOptions().iconClasses.error,\n          message,\n          optionsOverride,\n          title\n        });\n      }\n\n      function getContainer(options, create) {\n        if (!options) {\n          options = getOptions();\n        }\n        $container = $(`# ${options.containerId}`);\n        if ($container.length) {\n          return $container;\n        }\n        if (create) {\n          $container = createContainer(options);\n        }\n        return $container;\n      }\n\n      function info(message, title, optionsOverride) {\n        return notify({\n          type: toastType.info,\n          iconClass: getOptions().iconClasses.info,\n          message,\n          optionsOverride,\n          title\n        });\n      }\n\n      function subscribe(callback) {\n        listener = callback;\n      }\n\n      function success(message, title, optionsOverride) {\n        return notify({\n          type: toastType.success,\n          iconClass: getOptions().iconClasses.success,\n          message,\n          optionsOverride,\n          title\n        });\n      }\n\n      function warning(message, title, optionsOverride) {\n        return notify({\n          type: toastType.warning,\n          iconClass: getOptions().iconClasses.warning,\n          message,\n          optionsOverride,\n          title\n        });\n      }\n\n      function clear($toastElement, clearOptions) {\n        const options = getOptions();\n        if (!$container) {\n          getContainer(options);\n        }\n        if (!clearToast($toastElement, options, clearOptions)) {\n          clearContainer(options);\n        }\n      }\n\n      function remove($toastElement) {\n        const options = getOptions();\n        if (!$container) {\n          getContainer(options);\n        }\n        if ($toastElement && $(':focus', $toastElement).length === 0) {\n          removeToast($toastElement);\n          return;\n        }\n        if ($container.children().length) {\n          $container.remove();\n        }\n      }\n\n      // internal functions\n\n      function clearContainer(options) {\n        const toastsToClear = $container.children();\n        for (let i = toastsToClear.length - 1; i >= 0; i--) {\n          clearToast($(toastsToClear[i]), options);\n        }\n      }\n\n      function clearToast($toastElement, options, clearOptions) {\n        const force = clearOptions && clearOptions.force ? clearOptions.force : false;\n        if ($toastElement && (force || $(':focus', $toastElement).length === 0)) {\n          $toastElement[options.hideMethod]({\n            duration: options.hideDuration,\n            easing: options.hideEasing,\n            complete() {\n              removeToast($toastElement);\n            }\n          });\n          return true;\n        }\n        return false;\n      }\n\n      function createContainer(options) {\n        $container = $('<div/>')\n          .attr('id', options.containerId)\n          .addClass(options.positionClass);\n\n        $container.appendTo($(options.target));\n        return $container;\n      }\n\n      function getDefaults() {\n        return {\n          tapToDismiss: true,\n          toastClass: 'toast',\n          containerId: 'toast-container',\n          debug: false,\n\n          showMethod: 'fadeIn', // fadeIn, slideDown, and show are built into jQuery\n          showDuration: 300,\n          showEasing: 'swing', // swing and linear are built into jQuery\n          onShown: undefined,\n          hideMethod: 'fadeOut',\n          hideDuration: 1000,\n          hideEasing: 'swing',\n          onHidden: undefined,\n          closeMethod: false,\n          closeDuration: false,\n          closeEasing: false,\n          closeOnHover: true,\n\n          extendedTimeOut: 1000,\n          iconClasses: {\n            error: 'toast-error',\n            info: 'toast-info',\n            success: 'toast-success',\n            warning: 'toast-warning'\n          },\n          iconClass: 'toast-info',\n          positionClass: 'toast-top-right',\n          timeOut: 5000, // Set timeOut and extendedTimeOut to 0 to make it sticky\n          titleClass: 'toast-title',\n          messageClass: 'toast-message',\n          escapeHtml: false,\n          target: 'body',\n          closeHtml: '<button type=\"button\">&times;</button>',\n          closeClass: 'toast-close-button',\n          newestOnTop: true,\n          preventDuplicates: false,\n          progressBar: false,\n          progressClass: 'toast-progress',\n          rtl: false\n        };\n      }\n\n      function publish(args) {\n        if (!listener) {\n          return;\n        }\n        listener(args);\n      }\n\n      function notify(map) {\n        const captains = console;\n        let options = getOptions();\n        let iconClass = map.iconClass || options.iconClass;\n\n        if (typeof map.optionsOverride !== 'undefined') {\n          options = $.extend(options, map.optionsOverride);\n          iconClass = map.optionsOverride.iconClass || iconClass;\n        }\n\n        if (shouldExit(options, map)) {\n          return undefined;\n        }\n\n        toastId++;\n\n        $container = getContainer(options, true);\n\n        let intervalId = null;\n        const $toastElement = $('<div/>');\n        const $titleElement = $('<div/>');\n        const $messageElement = $('<div/>');\n        const $progressElement = $('<div/>');\n        const $closeElement = $(options.closeHtml);\n        const progressBar = {\n          intervalId: null,\n          hideEta: null,\n          maxHideTime: null\n        };\n        const response = {\n          toastId,\n          state: 'visible',\n          startTime: new Date(),\n          options,\n          map\n        };\n\n        personalizeToast();\n\n        displayToast();\n\n        handleEvents();\n\n        publish(response);\n\n        if (options.debug && console) {\n          captains.log(response);\n        }\n\n        return $toastElement;\n\n        function escapeHtml(source) {\n          if (source === null) {\n            source = '';\n          }\n\n          return source\n            .replace(/&/g, '&amp;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n        }\n\n        function personalizeToast() {\n          setIcon();\n          setTitle();\n          setMessage();\n          setCloseButton();\n          setProgressBar();\n          setRTL();\n          setSequence();\n          setAria();\n        }\n\n        function setAria() {\n          let ariaValue = '';\n          switch (map.iconClass) {\n          case 'toast-success':\n          case 'toast-info':\n            ariaValue = 'polite';\n            break;\n          default:\n            ariaValue = 'assertive';\n          }\n          $toastElement.attr('aria-live', ariaValue);\n        }\n\n        function handleEvents() {\n          if (options.closeOnHover) {\n            $toastElement.hover(stickAround, delayedHideToast);\n          }\n\n          if (!options.onclick && options.tapToDismiss) {\n            $toastElement.click(hideToast);\n          }\n\n          if (options.closeButton && $closeElement) {\n            $closeElement.click((event) => {\n              if (event.stopPropagation) {\n                event.stopPropagation();\n              } else if (event.cancelBubble !== undefined && event.cancelBubble !== true) {\n                event.cancelBubble = true;\n              }\n\n              if (options.onCloseClick) {\n                options.onCloseClick(event);\n              }\n\n              hideToast(true);\n            });\n          }\n\n          if (options.onclick) {\n            $toastElement.click((event) => {\n              options.onclick(event);\n              hideToast();\n            });\n          }\n        }\n\n        function displayToast() {\n          $toastElement.hide();\n\n          $toastElement[options.showMethod]({\n            duration: options.showDuration,\n            easing: options.showEasing,\n            complete: options.onShown\n          });\n\n          if (options.timeOut > 0) {\n            intervalId = setTimeout(hideToast, options.timeOut);\n            progressBar.maxHideTime = parseFloat(options.timeOut);\n            progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;\n            if (options.progressBar) {\n              progressBar.intervalId = setInterval(updateProgress, 10);\n            }\n          }\n        }\n\n        function setIcon() {\n          if (map.iconClass) {\n            $toastElement.addClass(options.toastClass).addClass(iconClass);\n          }\n        }\n\n        function setSequence() {\n          if (options.newestOnTop) {\n            $container.prepend($toastElement);\n          } else {\n            $container.append($toastElement);\n          }\n        }\n\n        function setTitle() {\n          if (map.title) {\n            let suffix = map.title;\n            if (options.escapeHtml) {\n              suffix = escapeHtml(map.title);\n            }\n            $titleElement.append(suffix).addClass(options.titleClass);\n            $toastElement.append($titleElement);\n          }\n        }\n\n        function setMessage() {\n          if (map.message) {\n            let suffix = map.message;\n            if (options.escapeHtml) {\n              suffix = escapeHtml(map.message);\n            }\n            $messageElement.append(suffix).addClass(options.messageClass);\n            $toastElement.append($messageElement);\n          }\n        }\n\n        function setCloseButton() {\n          if (options.closeButton) {\n            $closeElement.addClass(options.closeClass).attr('role', 'button');\n            $toastElement.prepend($closeElement);\n          }\n        }\n\n        function setProgressBar() {\n          if (options.progressBar) {\n            $progressElement.addClass(options.progressClass);\n            $toastElement.prepend($progressElement);\n          }\n        }\n\n        function setRTL() {\n          if (options.rtl) {\n            $toastElement.addClass('rtl');\n          }\n        }\n\n        // eslint-disable-next-line no-shadow\n        function shouldExit(options, map) {\n          if (options.preventDuplicates) {\n            if (map.message === previousToast) {\n              return true;\n            }\n\n            previousToast = map.message;\n          }\n          return false;\n        }\n\n        function hideToast(override) {\n          const method =\n            override && options.closeMethod !== false ? options.closeMethod : options.hideMethod;\n          const duration =\n            override && options.closeDuration !== false\n              ? options.closeDuration\n              : options.hideDuration;\n          const easing =\n            override && options.closeEasing !== false ? options.closeEasing : options.hideEasing;\n          if ($(':focus', $toastElement).length && !override) {\n            return undefined;\n          }\n          clearTimeout(progressBar.intervalId);\n          return $toastElement[method]({\n            duration,\n            easing,\n            complete() {\n              removeToast($toastElement);\n              clearTimeout(intervalId);\n              if (options.onHidden && response.state !== 'hidden') {\n                options.onHidden();\n              }\n              response.state = 'hidden';\n              response.endTime = new Date();\n              publish(response);\n            }\n          });\n        }\n\n        function delayedHideToast() {\n          if (options.timeOut > 0 || options.extendedTimeOut > 0) {\n            intervalId = setTimeout(hideToast, options.extendedTimeOut);\n            progressBar.maxHideTime = parseFloat(options.extendedTimeOut);\n            progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;\n          }\n        }\n\n        function stickAround() {\n          clearTimeout(intervalId);\n          progressBar.hideEta = 0;\n          $toastElement.stop(true, true)[options.showMethod]({\n            duration: options.showDuration,\n            easing: options.showEasing\n          });\n        }\n\n        function updateProgress() {\n          const percentage =\n            ((progressBar.hideEta - new Date().getTime()) / progressBar.maxHideTime) * 100;\n          $progressElement.width(`${percentage}%`);\n        }\n      }\n\n      function getOptions() {\n        return $.extend({}, getDefaults(), toastr.options);\n      }\n\n      function removeToast($toastElement) {\n        if (!$container) {\n          $container = getContainer();\n        }\n        if ($toastElement.is(':visible')) {\n          return;\n        }\n        $toastElement.remove();\n        $toastElement = null;\n        if ($container.children().length === 0) {\n          $container.remove();\n          previousToast = undefined;\n        }\n      }\n    })();\n  });\n})(\n  typeof define === 'function' && define.amd\n    ? define\n    : (deps, factory) => {\n      if (typeof module !== 'undefined' && module.exports) {\n        module.exports = factory(require('jquery'));\n      } else {\n        window.toastr = factory(window.jQuery);\n      }\n    }\n);\n"]}